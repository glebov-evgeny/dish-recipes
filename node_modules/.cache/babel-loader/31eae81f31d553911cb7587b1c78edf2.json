{"ast":null,"code":"var _jsxFileName = \"/Users/evgeniy/Desktop/portfolio/dish-recipes/src/pages/Recipe.jsx\";\nimport { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { getMealById } from \"../api\";\nimport { Preloader } from \"../components/Preloader/Preloader\";\nimport { RecipeItem } from \"../components/RecipeItem/RecipeItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Recipe() {\n  // const [recipe, setRecipe] = useState({})\n  // const { id } = useParams();\n  // const {goBack} = useHistory();\n  // useEffect(() => {\n  //     getMealById(id).then( (data) => setRecipe(data.meals[0]))\n  // }, [id])\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back__btn\",\n      onClick: goBack,\n      children: \"Go back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), !recipe.idMeal ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(RecipeItem, {\n      recipe: recipe,\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 41\n    }, this) //   <div className=\"recipe\">\n    //       <img src={recipe.strMealThumb} alt=\"{recipe.strMeal}\" />\n    //       <h1>{recipe.strMeal}</h1>\n    //       <h6>Category: {recipe.strCategory}</h6>\n    //       {recipe.strArea ? <h6>Area: {recipe.strArea}</h6> : null}\n    //       <p>{recipe.strInstructions}</p>\n    //         <table className=\"centered\">\n    //             <thead>\n    //                 <tr>\n    //                     <th>Ingredient</th>\n    //                     <th>Measure</th>\n    //                 </tr>\n    //             </thead>\n    //             <tbody>\n    //                 {\n    //                     Object.keys(recipe).map(key => {\n    //                         if(key.includes('Ingredient') && recipe[key]){\n    //                             return (\n    //                                 <tr key={key}>\n    //                                     <td>{recipe[key]}</td>\n    //                                     <td>{\n    //                                        recipe[`strMeasure${key.slice(13)}`] \n    //                                     }</td>\n    //                                 </tr>\n    //                             )\n    //                         }\n    //                         return null\n    //                     })\n    //                 }\n    //             </tbody>\n    //         </table>\n    //       {recipe.strYoutube ? (\n    //           <div class=\"row\">\n    //               <h5>Video Recipe</h5>\n    //               <iframe title={id} src={`https://www.youtube.com/embed/${recipe.strYoutube.slice(-11)}`} allowFullScreen/>\n    //           </div>\n    //       ) : null}\n    //   </div>\n    ]\n  }, void 0, true);\n}\n\n_c = Recipe;\nexport { Recipe };\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"sources":["/Users/evgeniy/Desktop/portfolio/dish-recipes/src/pages/Recipe.jsx"],"names":["useEffect","useState","useParams","useHistory","getMealById","Preloader","RecipeItem","Recipe","goBack","recipe","idMeal","id"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,SAASC,SAAT,QAA0B,mCAA1B;AACA,SAASC,UAAT,QAA2B,qCAA3B;;;;AAEA,SAASC,MAAT,GAAkB;AACd;AACA;AACA;AACA;AACA;AACA;AAEF,sBAAO;AAAA,4BACD;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,OAAO,EAAEC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADC,EAIF,CAACC,MAAM,CAACC,MAAR,gBAAiB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAjB,gBAAiC,QAAC,UAAD;AAAY,MAAA,MAAM,EAAED,MAApB;AAA4B,MAAA,EAAE,EAAEE;AAAhC;AAAA;AAAA;AAAA;AAAA,YAJ/B,CAMD;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AA7CC;AAAA,kBAAP;AAgDD;;KAxDQJ,M;AAyDT,SAASA,MAAT","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { getMealById } from \"../api\";\nimport { Preloader } from \"../components/Preloader/Preloader\";\nimport { RecipeItem } from \"../components/RecipeItem/RecipeItem\"\n\nfunction Recipe() {\n    // const [recipe, setRecipe] = useState({})\n    // const { id } = useParams();\n    // const {goBack} = useHistory();\n    // useEffect(() => {\n    //     getMealById(id).then( (data) => setRecipe(data.meals[0]))\n    // }, [id])\n\n  return <>\n        <button className=\"back__btn\" onClick={goBack}>\n        Go back\n      </button>\n      {!recipe.idMeal ? <Preloader /> : <RecipeItem recipe={recipe} id={id}/>\n      \n        //   <div className=\"recipe\">\n        //       <img src={recipe.strMealThumb} alt=\"{recipe.strMeal}\" />\n        //       <h1>{recipe.strMeal}</h1>\n        //       <h6>Category: {recipe.strCategory}</h6>\n        //       {recipe.strArea ? <h6>Area: {recipe.strArea}</h6> : null}\n        //       <p>{recipe.strInstructions}</p>\n\n        //         <table className=\"centered\">\n        //             <thead>\n        //                 <tr>\n        //                     <th>Ingredient</th>\n        //                     <th>Measure</th>\n        //                 </tr>\n        //             </thead>\n        //             <tbody>\n        //                 {\n        //                     Object.keys(recipe).map(key => {\n        //                         if(key.includes('Ingredient') && recipe[key]){\n        //                             return (\n        //                                 <tr key={key}>\n        //                                     <td>{recipe[key]}</td>\n        //                                     <td>{\n        //                                        recipe[`strMeasure${key.slice(13)}`] \n        //                                     }</td>\n        //                                 </tr>\n        //                             )\n        //                         }\n        //                         return null\n        //                     })\n        //                 }\n        //             </tbody>\n        //         </table>\n\n        //       {recipe.strYoutube ? (\n        //           <div class=\"row\">\n        //               <h5>Video Recipe</h5>\n        //               <iframe title={id} src={`https://www.youtube.com/embed/${recipe.strYoutube.slice(-11)}`} allowFullScreen/>\n        //           </div>\n        //       ) : null}\n        //   </div>\n      }\n  </>;\n}\nexport { Recipe };\n"]},"metadata":{},"sourceType":"module"}